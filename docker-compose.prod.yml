services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@example.com --agree-tos --no-eff-email -d fanxytv.com -d www.fanxytv.com

  frontend:
    build:
      context: ./remote-controller-app
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=https://fanxytv.com/api
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build:
      context: ./remote-controller-app
      dockerfile: backend.Dockerfile
    volumes:
      - deep-live-cam-models:/root/.insightface/models
    environment:
      - PYTHONPATH=/app
      - ENV=production
    command: ["gunicorn", "--workers", "2", "--bind", "0.0.0.0:8000", "--timeout", "120", "api_server:app"]
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  deep-live-cam-models: 